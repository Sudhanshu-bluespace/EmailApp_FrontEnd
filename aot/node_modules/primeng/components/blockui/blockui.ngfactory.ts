/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'primeng/components/blockui/blockui';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/change_detection/change_detection_util';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/view_utils';
import * as import9 from '@angular/core/src/render/api';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from 'primeng/components/dom/domhandler';
import * as import12 from '@angular/core/src/linker/view_type';
import * as import13 from '@angular/core/src/change_detection/constants';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import17 from '../../../@angular/common/src/directives/ng_style.ngfactory';
import * as import18 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import19 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import20 from '@angular/common/src/directives/ng_class';
import * as import21 from '@angular/common/src/directives/ng_style';
class BlockUIModuleInjector extends import0.NgModuleInjector<import1.BlockUIModule> {
  _CommonModule_0:import2.CommonModule;
  _BlockUIModule_1:import1.BlockUIModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.BlockUIModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._BlockUIModule_1 = new import1.BlockUIModule();
    return this._BlockUIModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.BlockUIModule)) { return this._BlockUIModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const BlockUIModuleNgFactory:import0.NgModuleFactory<import1.BlockUIModule> = new import0.NgModuleFactory(BlockUIModuleInjector,import1.BlockUIModule);
export class Wrapper_BlockUI {
  /*private*/ _eventHandler:Function;
  context:import1.BlockUI;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import1.BlockUI(p0,p1);
    this._expr_0 = import6.UNINITIALIZED;
    this._expr_1 = import6.UNINITIALIZED;
  }
  ngOnDetach(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  check_target(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.target = currValue;
      this._expr_0 = currValue;
    }
  }
  check_blocked(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.blocked = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import7.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import7.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_BlockUI_Host:import9.RenderComponentType = import8.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{});
class View_BlockUI_Host0 extends import7.AppView<any> {
  _el_0:any;
  compView_0:import7.AppView<import1.BlockUI>;
  _DomHandler_0_3:import11.DomHandler;
  _BlockUI_0_4:Wrapper_BlockUI;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_BlockUI_Host0,renderType_BlockUI_Host,import12.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import8.selectOrCreateRenderHostElement(this.renderer,'p-blockUI',import8.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_BlockUI0(this.viewUtils,this,0,this._el_0);
    this._DomHandler_0_3 = new import11.DomHandler();
    this._BlockUI_0_4 = new Wrapper_BlockUI(new import15.ElementRef(this._el_0),this._DomHandler_0_3);
    this.compView_0.create(this._BlockUI_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._BlockUI_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_3; }
    if (((token === import1.BlockUI) && (0 === requestNodeIndex))) { return this._BlockUI_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._BlockUI_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._BlockUI_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._BlockUI_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const BlockUINgFactory:import14.ComponentFactory<import1.BlockUI> = new import14.ComponentFactory<import1.BlockUI>('p-blockUI',View_BlockUI_Host0,import1.BlockUI);
const styles_BlockUI:any[] = ([] as any[]);
var renderType_BlockUI:import9.RenderComponentType = import8.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_BlockUI,{});
export class View_BlockUI0 extends import7.AppView<import1.BlockUI> {
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import16.Wrapper_NgClass;
  _NgStyle_1_4:import17.Wrapper_NgStyle;
  _text_2:any;
  _map_5:any;
  _map_6:any;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_BlockUI0,renderType_BlockUI,import12.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
    this._map_5 = import8.pureProxy1((p0:any):{[key: string]:any} => {
      return {'ui-blockui-document': p0};
    });
    this._map_6 = import8.pureProxy1((p0:any):{[key: string]:any} => {
      return {display: p0};
    });
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','ui-blockui ui-widget-overlay'),(null as any));
    this._NgClass_1_3 = new import16.Wrapper_NgClass(this.parentView.injectorGet(import18.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import19.KeyValueDiffers,this.parentIndex),new import15.ElementRef(this._el_1),this.renderer);
    this._NgStyle_1_4 = new import17.Wrapper_NgStyle(this.parentView.injectorGet(import19.KeyValueDiffers,this.parentIndex),new import15.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.NgClass) && (1 === requestNodeIndex))) { return this._NgClass_1_3.context; }
    if (((token === import21.NgStyle) && (1 === requestNodeIndex))) { return this._NgStyle_1_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = 'ui-blockui ui-widget-overlay';
    this._NgClass_1_3.check_klass(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = this._map_5(!this.context.target);
    this._NgClass_1_3.check_ngClass(currVal_1_0_1,throwOnChange,false);
    this._NgClass_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_1_1_0:any = this._map_6((this.context.blocked? 'block': 'none'));
    this._NgStyle_1_4.check_ngStyle(currVal_1_1_0,throwOnChange,false);
    this._NgStyle_1_4.ngDoCheck(this,this._el_1,throwOnChange);
  }
}