/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'primeng/components/codehighlighter/codehighlighter';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/linker/view';
class CodeHighlighterModuleInjector extends import0.NgModuleInjector<import1.CodeHighlighterModule> {
  _CommonModule_0:import2.CommonModule;
  _CodeHighlighterModule_1:import1.CodeHighlighterModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.CodeHighlighterModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._CodeHighlighterModule_1 = new import1.CodeHighlighterModule();
    return this._CodeHighlighterModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.CodeHighlighterModule)) { return this._CodeHighlighterModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const CodeHighlighterModuleNgFactory:import0.NgModuleFactory<import1.CodeHighlighterModule> = new import0.NgModuleFactory(CodeHighlighterModuleInjector,import1.CodeHighlighterModule);
export class Wrapper_CodeHighlighter {
  /*private*/ _eventHandler:Function;
  context:import1.CodeHighlighter;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import1.CodeHighlighter(p0);
  }
  ngOnDetach(view:import6.AppView<any>,componentView:import6.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import6.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import6.AppView<any>,componentView:import6.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import6.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}