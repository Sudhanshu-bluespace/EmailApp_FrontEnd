/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'primeng/components/confirmdialog/confirmdialog';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from 'primeng/components/button/button';
import * as import4 from '@angular/common/src/localization';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/core/src/change_detection/change_detection_util';
import * as import8 from '@angular/core/src/linker/view';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/render/api';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from 'primeng/components/dom/domhandler';
import * as import13 from '@angular/core/src/linker/query_list';
import * as import14 from '@angular/core/src/linker/view_type';
import * as import15 from '@angular/core/src/change_detection/constants';
import * as import16 from '@angular/core/src/linker/component_factory';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from 'primeng/components/common/api';
import * as import19 from '@angular/core/src/animation/animation_transition';
import * as import20 from '@angular/core/src/animation/animation_sequence_player';
import * as import21 from '@angular/core/src/animation/animation_styles';
import * as import22 from '@angular/core/src/animation/animation_style_util';
import * as import23 from '@angular/core/src/animation/animation_keyframe';
import * as import24 from '@angular/core/src/animation/animation_player';
import * as import25 from '@angular/core/src/linker/view_container';
import * as import26 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import27 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import28 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import29 from '@angular/common/src/directives/ng_class';
import * as import30 from '../button/button.ngfactory';
import * as import31 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import32 from '@angular/core/src/linker/template_ref';
import * as import33 from '@angular/common/src/directives/ng_if';
import * as import34 from '@angular/core/src/security';
class ConfirmDialogModuleInjector extends import0.NgModuleInjector<import1.ConfirmDialogModule> {
  _CommonModule_0:import2.CommonModule;
  _ButtonModule_1:import3.ButtonModule;
  _ConfirmDialogModule_2:import1.ConfirmDialogModule;
  __NgLocalization_3:import4.NgLocaleLocalization;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_3():import4.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == null)) { (this.__NgLocalization_3 = new import4.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_3;
  }
  createInternal():import1.ConfirmDialogModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._ButtonModule_1 = new import3.ButtonModule();
    this._ConfirmDialogModule_2 = new import1.ConfirmDialogModule();
    return this._ConfirmDialogModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.ButtonModule)) { return this._ButtonModule_1; }
    if ((token === import1.ConfirmDialogModule)) { return this._ConfirmDialogModule_2; }
    if ((token === import4.NgLocalization)) { return this._NgLocalization_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const ConfirmDialogModuleNgFactory:import0.NgModuleFactory<import1.ConfirmDialogModule> = new import0.NgModuleFactory(ConfirmDialogModuleInjector,import1.ConfirmDialogModule);
export class Wrapper_ConfirmDialog {
  /*private*/ _eventHandler:Function;
  context:import1.ConfirmDialog;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this._changed = false;
    this.context = new import1.ConfirmDialog(p0,p1,p2,p3);
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_10 = import7.UNINITIALIZED;
    this._expr_11 = import7.UNINITIALIZED;
    this._expr_12 = import7.UNINITIALIZED;
    this._expr_13 = import7.UNINITIALIZED;
    this._expr_14 = import7.UNINITIALIZED;
    this._expr_15 = import7.UNINITIALIZED;
    this._expr_16 = import7.UNINITIALIZED;
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  check_header(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.header = currValue;
      this._expr_0 = currValue;
    }
  }
  check_icon(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.icon = currValue;
      this._expr_1 = currValue;
    }
  }
  check_message(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.message = currValue;
      this._expr_2 = currValue;
    }
  }
  check_acceptIcon(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.acceptIcon = currValue;
      this._expr_3 = currValue;
    }
  }
  check_acceptLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.acceptLabel = currValue;
      this._expr_4 = currValue;
    }
  }
  check_acceptVisible(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.acceptVisible = currValue;
      this._expr_5 = currValue;
    }
  }
  check_rejectIcon(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.rejectIcon = currValue;
      this._expr_6 = currValue;
    }
  }
  check_rejectLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.rejectLabel = currValue;
      this._expr_7 = currValue;
    }
  }
  check_rejectVisible(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.rejectVisible = currValue;
      this._expr_8 = currValue;
    }
  }
  check_width(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this._changed = true;
      this.context.width = currValue;
      this._expr_9 = currValue;
    }
  }
  check_height(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_10,currValue))) {
      this._changed = true;
      this.context.height = currValue;
      this._expr_10 = currValue;
    }
  }
  check_closeOnEscape(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_11,currValue))) {
      this._changed = true;
      this.context.closeOnEscape = currValue;
      this._expr_11 = currValue;
    }
  }
  check_rtl(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_12,currValue))) {
      this._changed = true;
      this.context.rtl = currValue;
      this._expr_12 = currValue;
    }
  }
  check_closable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_13,currValue))) {
      this._changed = true;
      this.context.closable = currValue;
      this._expr_13 = currValue;
    }
  }
  check_responsive(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_14,currValue))) {
      this._changed = true;
      this.context.responsive = currValue;
      this._expr_14 = currValue;
    }
  }
  check_appendTo(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_15,currValue))) {
      this._changed = true;
      this.context.appendTo = currValue;
      this._expr_15 = currValue;
    }
  }
  check_visible(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_16,currValue))) {
      this._changed = true;
      this.context.visible = currValue;
      this._expr_16 = currValue;
    }
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_ConfirmDialog_Host:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_ConfirmDialog_Host0 extends import8.AppView<any> {
  _el_0:any;
  compView_0:import8.AppView<import1.ConfirmDialog>;
  _DomHandler_0_3:import12.DomHandler;
  _ConfirmDialog_0_4:Wrapper_ConfirmDialog;
  _query_Footer_0_0:import13.QueryList<any>;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ConfirmDialog_Host0,renderType_ConfirmDialog_Host,import14.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import15.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer,'p-confirmDialog',import9.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ConfirmDialog0(this.viewUtils,this,0,this._el_0);
    this._DomHandler_0_3 = new import12.DomHandler();
    this._ConfirmDialog_0_4 = new Wrapper_ConfirmDialog(new import17.ElementRef(this._el_0),this._DomHandler_0_3,this.renderer,this.injectorGet(import18.ConfirmationService,this.parentIndex));
    this._query_Footer_0_0 = new import13.QueryList<any>();
    this.compView_0.create(this._ConfirmDialog_0_4.context);
    this._query_Footer_0_0.reset(([] as any[]));
    this._ConfirmDialog_0_4.context.footer = this._query_Footer_0_0.first;
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import16.ComponentRef_<any>(0,this,this._el_0,this._ConfirmDialog_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_3; }
    if (((token === import1.ConfirmDialog) && (0 === requestNodeIndex))) { return this._ConfirmDialog_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ConfirmDialog_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._ConfirmDialog_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ConfirmDialog_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const ConfirmDialogNgFactory:import16.ComponentFactory<import1.ConfirmDialog> = new import16.ComponentFactory<import1.ConfirmDialog>('p-confirmDialog',View_ConfirmDialog_Host0,import1.ConfirmDialog);
const styles_ConfirmDialog:any[] = ([] as any[]);
var ConfirmDialog_dialogState_states:any = {
  'hidden': {'opacity': '0'},
  'visible': {'opacity': '1'},
  '*': {}
}
;
function ConfirmDialog_dialogState_factory(view:import8.AppView<any>,element:any,currentState:any,nextState:any):import19.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,((nextState == 'void')? (null as any): 'dialogState'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = ConfirmDialog_dialogState_states['*'];
  var startStateStyles:any = ConfirmDialog_dialogState_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = ConfirmDialog_dialogState_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == 'visible') && (nextState == 'hidden')))) {
      player = new import20.AnimationSequencePlayer([view.renderer.animate(element,new import21.AnimationStyles(import22.collectAndResolveStyles(collectedStyles,[startStateStyles])),import22.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import23.AnimationKeyframe(0,new import21.AnimationStyles(import22.collectAndResolveStyles(collectedStyles,[{}]))),
        new import23.AnimationKeyframe(1,new import21.AnimationStyles(import22.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),400,0,'ease-in',previousPlayers)]);
    totalTime = 400;
  }
  if (((player == (null as any)) && ((currentState == 'hidden') && (nextState == 'visible')))) {
      player = new import20.AnimationSequencePlayer([view.renderer.animate(element,new import21.AnimationStyles(import22.collectAndResolveStyles(collectedStyles,[startStateStyles])),import22.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import23.AnimationKeyframe(0,new import21.AnimationStyles(import22.collectAndResolveStyles(collectedStyles,[{}]))),
        new import23.AnimationKeyframe(1,new import21.AnimationStyles(import22.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),400,0,'ease-out',previousPlayers)]);
    totalTime = 400;
  }
  if ((player == (null as any))) { (player = new import24.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import22.renderStyles(element,view.renderer,import22.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import20.AnimationSequencePlayer(previousPlayers).destroy();
  import22.renderStyles(element,view.renderer,import22.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'dialogState',player);
  return new import19.AnimationTransition(player,currentState,nextState,totalTime);
}
class View_ConfirmDialog1 extends import8.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_ConfirmDialog1,renderType_ConfirmDialog,import14.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import15.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'span',new import9.InlineArray2(2,'class','ui-dialog-title'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import9.inlineInterpolate(1,'',this.parentView.context.header,'');
    if (import9.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_ConfirmDialog2 extends import8.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import26.Wrapper_NgClass;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _map_5:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_ConfirmDialog2,renderType_ConfirmDialog,import14.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import15.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._map_5 = import9.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all': p0,
        'ui-state-hover': p1
      }
      ;
    });
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'a',new import9.InlineArray4(4,'href','#','role','button'),(null as any));
    this._NgClass_0_3 = new import26.Wrapper_NgClass(this.parentView.parentView.injectorGet(import27.IterableDiffers,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import28.KeyValueDiffers,this.parentView.parentIndex),new import17.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    this._el_2 = import9.createRenderElement(this.renderer,this._el_0,'span',new import9.InlineArray2(2,'class','fa fa-fw fa-close'),(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_0,new import9.InlineArray8(6,'click',(null as any),'mouseenter',(null as any),'mouseleave',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import29.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this._map_5(true,this.parentView.context.hoverCloseIcon);
    this._NgClass_0_3.check_ngClass(currVal_0_0_0,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.hide($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'mouseenter')) {
      const pd_sub_1:any = ((<any>(this.parentView.context.hoverCloseIcon = true)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'mouseleave')) {
      const pd_sub_2:any = ((<any>(this.parentView.context.hoverCloseIcon = false)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}
class View_ConfirmDialog3 extends import8.AppView<any> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_ConfirmDialog3,renderType_ConfirmDialog,import14.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import15.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'div',new import9.InlineArray2(2,'class','ui-dialog-buttonpane ui-widget-content ui-helper-clearfix'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this.projectNodes(this._el_0,0);
    this._text_2 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_ConfirmDialog5 extends import8.AppView<any> {
  _el_0:any;
  _DomHandler_0_3:import12.DomHandler;
  _Button_0_4:import30.Wrapper_Button;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_ConfirmDialog5,renderType_ConfirmDialog,import14.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import15.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'button',new import9.InlineArray4(4,'pButton','','type','button'),(null as any));
    this._DomHandler_0_3 = new import12.DomHandler();
    this._Button_0_4 = new import30.Wrapper_Button(new import17.ElementRef(this._el_0),this._DomHandler_0_3);
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_0,new import9.InlineArray16(14,'click',(null as any),'mouseenter',(null as any),'mouseleave',(null as any),'mousedown',(null as any),'mouseup',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_3; }
    if (((token === import3.Button) && (0 === requestNodeIndex))) { return this._Button_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.parentView.context.rejectLabel;
    this._Button_0_4.check_label(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.parentView.context.rejectIcon;
    this._Button_0_4.check_icon(currVal_0_0_1,throwOnChange,false);
    this._Button_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this._Button_0_4.checkHost(this,this,this._el_0,throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Button_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._Button_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._Button_0_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.reject()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_ConfirmDialog6 extends import8.AppView<any> {
  _el_0:any;
  _DomHandler_0_3:import12.DomHandler;
  _Button_0_4:import30.Wrapper_Button;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_ConfirmDialog6,renderType_ConfirmDialog,import14.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import15.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'button',new import9.InlineArray4(4,'pButton','','type','button'),(null as any));
    this._DomHandler_0_3 = new import12.DomHandler();
    this._Button_0_4 = new import30.Wrapper_Button(new import17.ElementRef(this._el_0),this._DomHandler_0_3);
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_0,new import9.InlineArray16(14,'click',(null as any),'mouseenter',(null as any),'mouseleave',(null as any),'mousedown',(null as any),'mouseup',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_3; }
    if (((token === import3.Button) && (0 === requestNodeIndex))) { return this._Button_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.parentView.context.acceptLabel;
    this._Button_0_4.check_label(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.parentView.context.acceptIcon;
    this._Button_0_4.check_icon(currVal_0_0_1,throwOnChange,false);
    this._Button_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this._Button_0_4.checkHost(this,this,this._el_0,throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Button_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._Button_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._Button_0_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.accept()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_ConfirmDialog4 extends import8.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import25.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import31.Wrapper_NgIf;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import25.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import31.Wrapper_NgIf;
  _text_5:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import25.ViewContainer) {
    super(View_ConfirmDialog4,renderType_ConfirmDialog,import14.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import15.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'div',new import9.InlineArray2(2,'class','ui-dialog-buttonpane ui-widget-content ui-helper-clearfix'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import25.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import32.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import31.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import25.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import32.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import31.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._anchor_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import32.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import33.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import32.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import33.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parentView.context.rejectVisible;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:any = this.parentView.context.acceptVisible;
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_4.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 2)) { return new View_ConfirmDialog5(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 4)) { return new View_ConfirmDialog6(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    return (null as any);
  }
}
var renderType_ConfirmDialog:import10.RenderComponentType = import9.createRenderComponentType('',1,import11.ViewEncapsulation.None,styles_ConfirmDialog,{'dialogState': ConfirmDialog_dialogState_factory});
export class View_ConfirmDialog0 extends import8.AppView<import1.ConfirmDialog> {
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import26.Wrapper_NgClass;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _vc_5:import25.ViewContainer;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import31.Wrapper_NgIf;
  _text_6:any;
  _anchor_7:any;
  /*private*/ _vc_7:import25.ViewContainer;
  _TemplateRef_7_5:any;
  _NgIf_7_6:import31.Wrapper_NgIf;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _anchor_18:any;
  /*private*/ _vc_18:import25.ViewContainer;
  _TemplateRef_18_5:any;
  _NgIf_18_6:import31.Wrapper_NgIf;
  _text_19:any;
  _anchor_20:any;
  /*private*/ _vc_20:import25.ViewContainer;
  _TemplateRef_20_5:any;
  _NgIf_20_6:import31.Wrapper_NgIf;
  _text_21:any;
  _text_22:any;
  /*private*/ _expr_36:any;
  /*private*/ _expr_37:any;
  /*private*/ _expr_38:any;
  /*private*/ _expr_39:any;
  _map_40:any;
  /*private*/ _expr_41:any;
  /*private*/ _expr_42:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ConfirmDialog0,renderType_ConfirmDialog,import14.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import15.ChangeDetectorStatus.CheckAlways);
    this._expr_36 = import7.UNINITIALIZED;
    this._expr_37 = import7.UNINITIALIZED;
    this._expr_38 = import7.UNINITIALIZED;
    this._expr_39 = import7.UNINITIALIZED;
    this._map_40 = import9.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'ui-dialog ui-confirmdialog ui-widget ui-widget-content ui-corner-all ui-shadow': p0,
        'ui-dialog-rtl': p1
      }
      ;
    });
    this._expr_41 = import7.UNINITIALIZED;
    this._expr_42 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import9.createRenderElement(this.renderer,parentRenderNode,'div',import9.EMPTY_INLINE_ARRAY,(null as any));
    this._NgClass_1_3 = new import26.Wrapper_NgClass(this.parentView.injectorGet(import27.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import28.KeyValueDiffers,this.parentIndex),new import17.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import9.createRenderElement(this.renderer,this._el_1,'div',new import9.InlineArray2(2,'class','ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_3,(null as any));
    this._vc_5 = new import25.ViewContainer(5,3,this,this._anchor_5);
    this._TemplateRef_5_5 = new import32.TemplateRef_(this,5,this._anchor_5);
    this._NgIf_5_6 = new import31.Wrapper_NgIf(this._vc_5.vcRef,this._TemplateRef_5_5);
    this._text_6 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this._anchor_7 = this.renderer.createTemplateAnchor(this._el_3,(null as any));
    this._vc_7 = new import25.ViewContainer(7,3,this,this._anchor_7);
    this._TemplateRef_7_5 = new import32.TemplateRef_(this,7,this._anchor_7);
    this._NgIf_7_6 = new import31.Wrapper_NgIf(this._vc_7.vcRef,this._TemplateRef_7_5);
    this._text_8 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._text_9 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_10 = import9.createRenderElement(this.renderer,this._el_1,'div',new import9.InlineArray2(2,'class','ui-dialog-content ui-widget-content'),(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n                ',(null as any));
    this._el_12 = import9.createRenderElement(this.renderer,this._el_10,'i',import9.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_10,'\n                ',(null as any));
    this._el_14 = import9.createRenderElement(this.renderer,this._el_10,'span',new import9.InlineArray2(2,'class','ui-confirmdialog-message'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'',(null as any));
    this._text_16 = this.renderer.createText(this._el_10,'\n            ',(null as any));
    this._text_17 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._anchor_18 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_18 = new import25.ViewContainer(18,1,this,this._anchor_18);
    this._TemplateRef_18_5 = new import32.TemplateRef_(this,18,this._anchor_18);
    this._NgIf_18_6 = new import31.Wrapper_NgIf(this._vc_18.vcRef,this._TemplateRef_18_5);
    this._text_19 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._anchor_20 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_20 = new import25.ViewContainer(20,1,this,this._anchor_20);
    this._TemplateRef_20_5 = new import32.TemplateRef_(this,20,this._anchor_20);
    this._NgIf_20_6 = new import31.Wrapper_NgIf(this._vc_20.vcRef,this._TemplateRef_20_5);
    this._text_21 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_22 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_1,new import9.InlineArray2(2,'mousedown',(null as any)),this.eventHandler(this.handleEvent_1));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._anchor_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._anchor_18,
      this._text_19,
      this._anchor_20,
      this._text_21,
      this._text_22
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import32.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import33.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6.context; }
    if (((token === import32.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_5; }
    if (((token === import33.NgIf) && (7 === requestNodeIndex))) { return this._NgIf_7_6.context; }
    if (((token === import32.TemplateRef) && (18 === requestNodeIndex))) { return this._TemplateRef_18_5; }
    if (((token === import33.NgIf) && (18 === requestNodeIndex))) { return this._NgIf_18_6.context; }
    if (((token === import32.TemplateRef) && (20 === requestNodeIndex))) { return this._TemplateRef_20_5; }
    if (((token === import33.NgIf) && (20 === requestNodeIndex))) { return this._NgIf_20_6.context; }
    if (((token === import29.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._NgClass_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_39:any = (this.context.visible? 'visible': 'hidden');
    if (import9.checkBinding(throwOnChange,this._expr_39,currVal_39)) {
      var animationTransition_dialogState:any = this.componentType.animations['dialogState'](this,this._el_1,((this._expr_39 == import7.UNINITIALIZED)? 'void': this._expr_39),((currVal_39 == import7.UNINITIALIZED)? 'void': currVal_39));
      this._expr_39 = currVal_39;
    }
    const currVal_1_0_0:any = this._map_40(true,this.context.rtl);
    this._NgClass_1_3.check_ngClass(currVal_1_0_0,throwOnChange,false);
    this._NgClass_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_5_0_0:any = this.context.header;
    this._NgIf_5_6.check_ngIf(currVal_5_0_0,throwOnChange,false);
    this._NgIf_5_6.ngDoCheck(this,this._anchor_5,throwOnChange);
    const currVal_7_0_0:any = this.context.closable;
    this._NgIf_7_6.check_ngIf(currVal_7_0_0,throwOnChange,false);
    this._NgIf_7_6.ngDoCheck(this,this._anchor_7,throwOnChange);
    const currVal_18_0_0:any = this.context.footer;
    this._NgIf_18_6.check_ngIf(currVal_18_0_0,throwOnChange,false);
    this._NgIf_18_6.ngDoCheck(this,this._anchor_18,throwOnChange);
    const currVal_20_0_0:boolean = !this.context.footer;
    this._NgIf_20_6.check_ngIf(currVal_20_0_0,throwOnChange,false);
    this._NgIf_20_6.ngDoCheck(this,this._anchor_20,throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    this._vc_7.detectChangesInNestedViews(throwOnChange);
    this._vc_18.detectChangesInNestedViews(throwOnChange);
    this._vc_20.detectChangesInNestedViews(throwOnChange);
    const currVal_36:any = (this.context.visible? 'block': 'none');
    if (import9.checkBinding(throwOnChange,this._expr_36,currVal_36)) {
      this.renderer.setElementStyle(this._el_1,'display',((this.viewUtils.sanitizer.sanitize(import34.SecurityContext.STYLE,currVal_36) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import34.SecurityContext.STYLE,currVal_36).toString()));
      this._expr_36 = currVal_36;
    }
    const currVal_37:any = this.context.width;
    if (import9.checkBinding(throwOnChange,this._expr_37,currVal_37)) {
      this.renderer.setElementStyle(this._el_1,'width',((this.viewUtils.sanitizer.sanitize(import34.SecurityContext.STYLE,currVal_37) == null)? (null as any): (this.viewUtils.sanitizer.sanitize(import34.SecurityContext.STYLE,currVal_37).toString() + 'px')));
      this._expr_37 = currVal_37;
    }
    const currVal_38:any = this.context.height;
    if (import9.checkBinding(throwOnChange,this._expr_38,currVal_38)) {
      this.renderer.setElementStyle(this._el_1,'height',((this.viewUtils.sanitizer.sanitize(import34.SecurityContext.STYLE,currVal_38) == null)? (null as any): (this.viewUtils.sanitizer.sanitize(import34.SecurityContext.STYLE,currVal_38).toString() + 'px')));
      this._expr_38 = currVal_38;
    }
    const currVal_41:any = this.context.icon;
    if (import9.checkBinding(throwOnChange,this._expr_41,currVal_41)) {
      this.renderer.setElementProperty(this._el_12,'className',currVal_41);
      this._expr_41 = currVal_41;
    }
    const currVal_42:any = import9.inlineInterpolate(1,'',this.context.message,'');
    if (import9.checkBinding(throwOnChange,this._expr_42,currVal_42)) {
      this.renderer.setText(this._text_15,currVal_42);
      this._expr_42 = currVal_42;
    }
  }
  destroyInternal():void {
    this._vc_5.destroyNestedViews();
    this._vc_7.destroyNestedViews();
    this._vc_18.destroyNestedViews();
    this._vc_20.destroyNestedViews();
  }
  detachInternal():void {
    var animationTransition_dialogState:any = this.componentType.animations['dialogState'](this,this._el_1,this._expr_39,'void');
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 5)) { return new View_ConfirmDialog1(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    if ((nodeIndex == 7)) { return new View_ConfirmDialog2(this.viewUtils,this,7,this._anchor_7,this._vc_7); }
    if ((nodeIndex == 18)) { return new View_ConfirmDialog3(this.viewUtils,this,18,this._anchor_18,this._vc_18); }
    if ((nodeIndex == 20)) { return new View_ConfirmDialog4(this.viewUtils,this,20,this._anchor_20,this._vc_20); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'mousedown')) {
      const pd_sub_0:any = ((<any>this.context.moveOnTop()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}