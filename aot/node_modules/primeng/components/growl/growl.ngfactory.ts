/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'primeng/components/growl/growl';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/change_detection/change_detection_util';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/view_utils';
import * as import9 from '@angular/core/src/render/api';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from 'primeng/components/dom/domhandler';
import * as import12 from '@angular/core/src/linker/view_type';
import * as import13 from '@angular/core/src/change_detection/constants';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import17 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import18 from '@angular/core/src/linker/view_container';
import * as import19 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import20 from '@angular/common/src/directives/ng_class';
import * as import21 from '@angular/core/src/security';
import * as import22 from '@angular/core/src/linker/query_list';
import * as import23 from '../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import24 from '@angular/core/src/linker/template_ref';
import * as import25 from '@angular/common/src/directives/ng_for';
class GrowlModuleInjector extends import0.NgModuleInjector<import1.GrowlModule> {
  _CommonModule_0:import2.CommonModule;
  _GrowlModule_1:import1.GrowlModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.GrowlModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._GrowlModule_1 = new import1.GrowlModule();
    return this._GrowlModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.GrowlModule)) { return this._GrowlModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const GrowlModuleNgFactory:import0.NgModuleFactory<import1.GrowlModule> = new import0.NgModuleFactory(GrowlModuleInjector,import1.GrowlModule);
export class Wrapper_Growl {
  /*private*/ _eventHandler:Function;
  context:import1.Growl;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import1.Growl(p0,p1,p2);
    this._expr_0 = import6.UNINITIALIZED;
    this._expr_1 = import6.UNINITIALIZED;
    this._expr_2 = import6.UNINITIALIZED;
  }
  ngOnDetach(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  check_sticky(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.sticky = currValue;
      this._expr_0 = currValue;
    }
  }
  check_life(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.life = currValue;
      this._expr_1 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import7.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { this.context.ngDoCheck(); }
    return changed;
  }
  checkHost(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import7.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_Growl_Host:import9.RenderComponentType = import8.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{});
class View_Growl_Host0 extends import7.AppView<any> {
  _el_0:any;
  compView_0:import7.AppView<import1.Growl>;
  _DomHandler_0_3:import11.DomHandler;
  _Growl_0_4:Wrapper_Growl;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Growl_Host0,renderType_Growl_Host,import12.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import8.selectOrCreateRenderHostElement(this.renderer,'p-growl',import8.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_Growl0(this.viewUtils,this,0,this._el_0);
    this._DomHandler_0_3 = new import11.DomHandler();
    this._Growl_0_4 = new Wrapper_Growl(new import15.ElementRef(this._el_0),this._DomHandler_0_3,this.injectorGet(import16.IterableDiffers,this.parentIndex));
    this.compView_0.create(this._Growl_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._Growl_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_3; }
    if (((token === import1.Growl) && (0 === requestNodeIndex))) { return this._Growl_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Growl_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Growl_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._Growl_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const GrowlNgFactory:import14.ComponentFactory<import1.Growl> = new import14.ComponentFactory<import1.Growl>('p-growl',View_Growl_Host0,import1.Growl);
const styles_Growl:any[] = ([] as any[]);
class View_Growl1 extends import7.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import17.Wrapper_NgClass;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _NgClass_6_3:import17.Wrapper_NgClass;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _text_15:any;
  _el_16:any;
  _text_17:any;
  _text_18:any;
  _map_21:any;
  _map_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import18.ViewContainer) {
    super(View_Growl1,renderType_Growl,import12.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._map_21 = import8.pureProxy4((p0:any,p1:any,p2:any,p3:any):{[key: string]:any} => {
      return {
        'ui-growl-message-info': p0,
        'ui-growl-message-warn': p1,
        'ui-growl-message-error': p2,
        'ui-growl-message-success': p3
      }
      ;
    });
    this._map_22 = import8.pureProxy4((p0:any,p1:any,p2:any,p3:any):{[key: string]:any} => {
      return {
        'fa-info-circle': p0,
        'fa-warning': p1,
        'fa-close': p2,
        'fa-check': p3
      }
      ;
    });
    this._expr_23 = import6.UNINITIALIZED;
    this._expr_24 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import8.createRenderElement(this.renderer,(null as any),'div',new import8.InlineArray4(4,'aria-live','polite','class','ui-growl-item-container ui-state-highlight ui-corner-all ui-shadow'),(null as any));
    this._NgClass_0_3 = new import17.Wrapper_NgClass(this.parentView.parentView.injectorGet(import16.IterableDiffers,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import19.KeyValueDiffers,this.parentView.parentIndex),new import15.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._el_2 = import8.createRenderElement(this.renderer,this._el_0,'div',new import8.InlineArray2(2,'class','ui-growl-item'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n                     ',(null as any));
    this._el_4 = import8.createRenderElement(this.renderer,this._el_2,'div',new import8.InlineArray2(2,'class','ui-growl-icon-close fa fa-close'),(null as any));
    this._text_5 = this.renderer.createText(this._el_2,'\n                     ',(null as any));
    this._el_6 = import8.createRenderElement(this.renderer,this._el_2,'span',new import8.InlineArray2(2,'class','ui-growl-image fa fa-2x'),(null as any));
    this._NgClass_6_3 = new import17.Wrapper_NgClass(this.parentView.parentView.injectorGet(import16.IterableDiffers,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import19.KeyValueDiffers,this.parentView.parentIndex),new import15.ElementRef(this._el_6),this.renderer);
    this._text_7 = this.renderer.createText(this._el_2,'\n                     ',(null as any));
    this._el_8 = import8.createRenderElement(this.renderer,this._el_2,'div',new import8.InlineArray2(2,'class','ui-growl-message'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n                        ',(null as any));
    this._el_10 = import8.createRenderElement(this.renderer,this._el_8,'span',new import8.InlineArray2(2,'class','ui-growl-title'),(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'',(null as any));
    this._text_12 = this.renderer.createText(this._el_8,'\n                        ',(null as any));
    this._el_13 = import8.createRenderElement(this.renderer,this._el_8,'p',import8.EMPTY_INLINE_ARRAY,(null as any));
    this._text_14 = this.renderer.createText(this._el_8,'\n                     ',(null as any));
    this._text_15 = this.renderer.createText(this._el_2,'\n                     ',(null as any));
    this._el_16 = import8.createRenderElement(this.renderer,this._el_2,'div',new import8.InlineArray2(2,'style','clear: both;'),(null as any));
    this._text_17 = this.renderer.createText(this._el_2,'\n                ',(null as any));
    this._text_18 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    var disposable_0:Function = import8.subscribeToRenderElement(this,this._el_4,new import8.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_4));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._text_18
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.NgClass) && (6 === requestNodeIndex))) { return this._NgClass_6_3.context; }
    if (((token === import20.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 18)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'ui-growl-item-container ui-state-highlight ui-corner-all ui-shadow';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this._map_21((this.context.$implicit.severity == 'info'),(this.context.$implicit.severity == 'warn'),(this.context.$implicit.severity == 'error'),(this.context.$implicit.severity == 'success'));
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_6_0_0:any = 'ui-growl-image fa fa-2x';
    this._NgClass_6_3.check_klass(currVal_6_0_0,throwOnChange,false);
    const currVal_6_0_1:any = this._map_22((this.context.$implicit.severity == 'info'),(this.context.$implicit.severity == 'warn'),(this.context.$implicit.severity == 'error'),(this.context.$implicit.severity == 'success'));
    this._NgClass_6_3.check_ngClass(currVal_6_0_1,throwOnChange,false);
    this._NgClass_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_23:any = import8.inlineInterpolate(1,'',this.context.$implicit.summary,'');
    if (import8.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setText(this._text_11,currVal_23);
      this._expr_23 = currVal_23;
    }
    const currVal_24:any = this.context.$implicit.detail;
    if (import8.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementProperty(this._el_13,'innerHTML',this.viewUtils.sanitizer.sanitize(import21.SecurityContext.HTML,currVal_24));
      this._expr_24 = currVal_24;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.remove(this.context.$implicit,this._el_0)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_Growl:import9.RenderComponentType = import8.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_Growl,{});
export class View_Growl0 extends import7.AppView<import1.Growl> {
  _viewQuery_container_0:import22.QueryList<any>;
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import18.ViewContainer;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import23.Wrapper_NgFor;
  _text_4:any;
  _text_5:any;
  /*private*/ _expr_10:any;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Growl0,renderType_Growl,import12.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
    this._expr_10 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_container_0 = new import22.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','ui-growl ui-widget'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import18.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import24.TemplateRef_(this,3,this._anchor_3);
    this._NgFor_3_6 = new import23.Wrapper_NgFor(this._vc_3.vcRef,this._TemplateRef_3_5,this.parentView.injectorGet(import16.IterableDiffers,this.parentIndex),this.ref);
    this._text_4 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._viewQuery_container_0.reset([new import15.ElementRef(this._el_1)]);
    this.context.containerViewChild = this._viewQuery_container_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import25.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.context.value;
    this._NgFor_3_6.check_ngForOf(currVal_3_0_0,throwOnChange,false);
    this._NgFor_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    const currVal_10:any = this.context.zIndex;
    if (import8.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementStyle(this._el_1,'zIndex',((this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE,currVal_10) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE,currVal_10).toString()));
      this._expr_10 = currVal_10;
    }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import7.AppView<any> {
    if ((nodeIndex == 3)) { return new View_Growl1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}