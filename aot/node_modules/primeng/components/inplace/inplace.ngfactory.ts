/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'primeng/components/inplace/inplace';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from 'primeng/components/button/button';
import * as import4 from '@angular/common/src/localization';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/core/src/change_detection/change_detection_util';
import * as import8 from '@angular/core/src/linker/view';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/render/api';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/view_type';
import * as import13 from '@angular/core/src/change_detection/constants';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import18 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import19 from '@angular/core/src/linker/element_ref';
import * as import20 from '@angular/common/src/directives/ng_class';
import * as import21 from 'primeng/components/dom/domhandler';
import * as import22 from '../button/button.ngfactory';
import * as import23 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import24 from '@angular/core/src/linker/template_ref';
import * as import25 from '@angular/common/src/directives/ng_if';
import * as import26 from '../../../@angular/common/src/directives/ng_style.ngfactory';
import * as import27 from '@angular/common/src/directives/ng_style';
class InplaceModuleInjector extends import0.NgModuleInjector<import1.InplaceModule> {
  _CommonModule_0:import2.CommonModule;
  _ButtonModule_1:import3.ButtonModule;
  _InplaceModule_2:import1.InplaceModule;
  __NgLocalization_3:import4.NgLocaleLocalization;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_3():import4.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == null)) { (this.__NgLocalization_3 = new import4.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_3;
  }
  createInternal():import1.InplaceModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._ButtonModule_1 = new import3.ButtonModule();
    this._InplaceModule_2 = new import1.InplaceModule();
    return this._InplaceModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.ButtonModule)) { return this._ButtonModule_1; }
    if ((token === import1.InplaceModule)) { return this._InplaceModule_2; }
    if ((token === import4.NgLocalization)) { return this._NgLocalization_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const InplaceModuleNgFactory:import0.NgModuleFactory<import1.InplaceModule> = new import0.NgModuleFactory(InplaceModuleInjector,import1.InplaceModule);
export class Wrapper_Inplace {
  /*private*/ _eventHandler:Function;
  context:import1.Inplace;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  subscription0:any;
  subscription1:any;
  constructor() {
    this._changed = false;
    this.context = new import1.Inplace();
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_active(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.active = currValue;
      this._expr_0 = currValue;
    }
  }
  check_closable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.closable = currValue;
      this._expr_1 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_2 = currValue;
    }
  }
  check_style(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.style = currValue;
      this._expr_3 = currValue;
    }
  }
  check_styleClass(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.styleClass = currValue;
      this._expr_4 = currValue;
    }
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onActivate.subscribe(_eventHandler.bind(view,'onActivate'))); }
    if (emit1) { (this.subscription1 = this.context.onDeactivate.subscribe(_eventHandler.bind(view,'onDeactivate'))); }
  }
}
export class Wrapper_InplaceDisplay {
  /*private*/ _eventHandler:Function;
  context:import1.InplaceDisplay;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.InplaceDisplay();
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_InplaceContent {
  /*private*/ _eventHandler:Function;
  context:import1.InplaceContent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.InplaceContent();
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_Inplace_Host:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_Inplace_Host0 extends import8.AppView<any> {
  _el_0:any;
  compView_0:import8.AppView<import1.Inplace>;
  _Inplace_0_3:Wrapper_Inplace;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Inplace_Host0,renderType_Inplace_Host,import12.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer,'p-inplace',import9.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_Inplace0(this.viewUtils,this,0,this._el_0);
    this._Inplace_0_3 = new Wrapper_Inplace();
    this.compView_0.create(this._Inplace_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._Inplace_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.Inplace) && (0 === requestNodeIndex))) { return this._Inplace_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Inplace_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._Inplace_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
  }
}
export const InplaceNgFactory:import14.ComponentFactory<import1.Inplace> = new import14.ComponentFactory<import1.Inplace>('p-inplace',View_Inplace_Host0,import1.Inplace);
const styles_Inplace:any[] = ([] as any[]);
class View_Inplace1 extends import8.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import15.Wrapper_NgClass;
  _text_1:any;
  _text_2:any;
  _map_4:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Inplace1,renderType_Inplace,import12.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._map_4 = import9.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'ui-state-hover': p0,
        'ui-state-disabled': p1
      }
      ;
    });
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'div',new import9.InlineArray2(2,'class','ui-inplace-display'),(null as any));
    this._NgClass_0_3 = new import15.Wrapper_NgClass(this.parentView.parentView.injectorGet(import17.IterableDiffers,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import18.KeyValueDiffers,this.parentView.parentIndex),new import19.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this.projectNodes(this._el_0,0);
    this._text_2 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_0,new import9.InlineArray8(6,'mouseenter',(null as any),'mouseleave',(null as any),'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 2)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'ui-inplace-display';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this._map_4((this.parentView.context.hover && !this.parentView.context.disabled),this.parentView.context.disabled);
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'mouseenter')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.hover = true)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'mouseleave')) {
      const pd_sub_1:any = ((<any>(this.parentView.context.hover = false)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'click')) {
      const pd_sub_2:any = ((<any>this.parentView.context.activate($event)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}
class View_Inplace3 extends import8.AppView<any> {
  _el_0:any;
  _DomHandler_0_3:import21.DomHandler;
  _Button_0_4:import22.Wrapper_Button;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Inplace3,renderType_Inplace,import12.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'button',new import9.InlineArray8(6,'icon','fa-close','pButton','','type','button'),(null as any));
    this._DomHandler_0_3 = new import21.DomHandler();
    this._Button_0_4 = new import22.Wrapper_Button(new import19.ElementRef(this._el_0),this._DomHandler_0_3);
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_0,new import9.InlineArray16(14,'click',(null as any),'mouseenter',(null as any),'mouseleave',(null as any),'mousedown',(null as any),'mouseup',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_3; }
    if (((token === import3.Button) && (0 === requestNodeIndex))) { return this._Button_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'fa-close';
    this._Button_0_4.check_icon(currVal_0_0_0,throwOnChange,false);
    this._Button_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this._Button_0_4.checkHost(this,this,this._el_0,throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Button_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._Button_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._Button_0_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.deactivate($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_Inplace2 extends import8.AppView<any> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import16.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import23.Wrapper_NgIf;
  _text_4:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Inplace2,renderType_Inplace,import12.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'div',new import9.InlineArray2(2,'class','ui-inplace-content'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this.projectNodes(this._el_0,1);
    this._text_2 = this.renderer.createText(this._el_0,'\n                ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_3 = new import16.ViewContainer(3,0,this,this._anchor_3);
    this._TemplateRef_3_5 = new import24.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import23.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_0,'\n            ',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._anchor_3,
      this._text_4
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import25.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.parentView.context.closable;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 3)) { return new View_Inplace3(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}
var renderType_Inplace:import10.RenderComponentType = import9.createRenderComponentType('',2,import11.ViewEncapsulation.None,styles_Inplace,{});
export class View_Inplace0 extends import8.AppView<import1.Inplace> {
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import15.Wrapper_NgClass;
  _NgStyle_1_4:import26.Wrapper_NgStyle;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import16.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import23.Wrapper_NgIf;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _vc_5:import16.ViewContainer;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import23.Wrapper_NgIf;
  _text_6:any;
  _text_7:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Inplace0,renderType_Inplace,import12.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import9.createRenderElement(this.renderer,parentRenderNode,'div',import9.EMPTY_INLINE_ARRAY,(null as any));
    this._NgClass_1_3 = new import15.Wrapper_NgClass(this.parentView.injectorGet(import17.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import18.KeyValueDiffers,this.parentIndex),new import19.ElementRef(this._el_1),this.renderer);
    this._NgStyle_1_4 = new import26.Wrapper_NgStyle(this.parentView.injectorGet(import18.KeyValueDiffers,this.parentIndex),new import19.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import16.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import24.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import23.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_5 = new import16.ViewContainer(5,1,this,this._anchor_5);
    this._TemplateRef_5_5 = new import24.TemplateRef_(this,5,this._anchor_5);
    this._NgIf_5_6 = new import23.Wrapper_NgIf(this._vc_5.vcRef,this._TemplateRef_5_5);
    this._text_6 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._text_7
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import24.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import25.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import24.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import25.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6.context; }
    if (((token === import20.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgClass_1_3.context; }
    if (((token === import27.NgStyle) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgStyle_1_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.styleClass;
    this._NgClass_1_3.check_klass(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = 'ui-inplace ui-widget';
    this._NgClass_1_3.check_ngClass(currVal_1_0_1,throwOnChange,false);
    this._NgClass_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_1_1_0:any = this.context.style;
    this._NgStyle_1_4.check_ngStyle(currVal_1_1_0,throwOnChange,false);
    this._NgStyle_1_4.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_3_0_0:boolean = !this.context.active;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    const currVal_5_0_0:any = this.context.active;
    this._NgIf_5_6.check_ngIf(currVal_5_0_0,throwOnChange,false);
    this._NgIf_5_6.ngDoCheck(this,this._anchor_5,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
    this._vc_5.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 3)) { return new View_Inplace1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    if ((nodeIndex == 5)) { return new View_Inplace2(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    return (null as any);
  }
}
var renderType_InplaceDisplay_Host:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_InplaceDisplay_Host0 extends import8.AppView<any> {
  _el_0:any;
  compView_0:import8.AppView<import1.InplaceDisplay>;
  _InplaceDisplay_0_3:Wrapper_InplaceDisplay;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InplaceDisplay_Host0,renderType_InplaceDisplay_Host,import12.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer,'p-inplaceDisplay',import9.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_InplaceDisplay0(this.viewUtils,this,0,this._el_0);
    this._InplaceDisplay_0_3 = new Wrapper_InplaceDisplay();
    this.compView_0.create(this._InplaceDisplay_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._InplaceDisplay_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.InplaceDisplay) && (0 === requestNodeIndex))) { return this._InplaceDisplay_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InplaceDisplay_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const InplaceDisplayNgFactory:import14.ComponentFactory<import1.InplaceDisplay> = new import14.ComponentFactory<import1.InplaceDisplay>('p-inplaceDisplay',View_InplaceDisplay_Host0,import1.InplaceDisplay);
const styles_InplaceDisplay:any[] = ([] as any[]);
var renderType_InplaceDisplay:import10.RenderComponentType = import9.createRenderComponentType('',1,import11.ViewEncapsulation.None,styles_InplaceDisplay,{});
export class View_InplaceDisplay0 extends import8.AppView<import1.InplaceDisplay> {
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InplaceDisplay0,renderType_InplaceDisplay,import12.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this.projectNodes(parentRenderNode,0);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
}
var renderType_InplaceContent_Host:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_InplaceContent_Host0 extends import8.AppView<any> {
  _el_0:any;
  compView_0:import8.AppView<import1.InplaceContent>;
  _InplaceContent_0_3:Wrapper_InplaceContent;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InplaceContent_Host0,renderType_InplaceContent_Host,import12.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer,'p-inplaceContent',import9.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_InplaceContent0(this.viewUtils,this,0,this._el_0);
    this._InplaceContent_0_3 = new Wrapper_InplaceContent();
    this.compView_0.create(this._InplaceContent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._InplaceContent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.InplaceContent) && (0 === requestNodeIndex))) { return this._InplaceContent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InplaceContent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const InplaceContentNgFactory:import14.ComponentFactory<import1.InplaceContent> = new import14.ComponentFactory<import1.InplaceContent>('p-inplaceContent',View_InplaceContent_Host0,import1.InplaceContent);
const styles_InplaceContent:any[] = ([] as any[]);
var renderType_InplaceContent:import10.RenderComponentType = import9.createRenderComponentType('',1,import11.ViewEncapsulation.None,styles_InplaceContent,{});
export class View_InplaceContent0 extends import8.AppView<import1.InplaceContent> {
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InplaceContent0,renderType_InplaceContent,import12.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this.projectNodes(parentRenderNode,0);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
}