/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'primeng/components/overlaypanel/overlaypanel';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/change_detection/change_detection_util';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/view_utils';
import * as import9 from '@angular/core/src/render/api';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from 'primeng/components/dom/domhandler';
import * as import12 from '@angular/core/src/linker/view_type';
import * as import13 from '@angular/core/src/change_detection/constants';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import17 from '@angular/core/src/linker/view_container';
import * as import18 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import19 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import20 from '@angular/common/src/directives/ng_class';
import * as import21 from '../../../@angular/common/src/directives/ng_style.ngfactory';
import * as import22 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import23 from '@angular/core/src/linker/template_ref';
import * as import24 from '@angular/common/src/directives/ng_if';
import * as import25 from '@angular/common/src/directives/ng_style';
import * as import26 from '@angular/core/src/security';
class OverlayPanelModuleInjector extends import0.NgModuleInjector<import1.OverlayPanelModule> {
  _CommonModule_0:import2.CommonModule;
  _OverlayPanelModule_1:import1.OverlayPanelModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.OverlayPanelModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._OverlayPanelModule_1 = new import1.OverlayPanelModule();
    return this._OverlayPanelModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.OverlayPanelModule)) { return this._OverlayPanelModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const OverlayPanelModuleNgFactory:import0.NgModuleFactory<import1.OverlayPanelModule> = new import0.NgModuleFactory(OverlayPanelModuleInjector,import1.OverlayPanelModule);
export class Wrapper_OverlayPanel {
  /*private*/ _eventHandler:Function;
  context:import1.OverlayPanel;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import1.OverlayPanel(p0,p1,p2);
    this._expr_0 = import6.UNINITIALIZED;
    this._expr_1 = import6.UNINITIALIZED;
    this._expr_2 = import6.UNINITIALIZED;
    this._expr_3 = import6.UNINITIALIZED;
    this._expr_4 = import6.UNINITIALIZED;
  }
  ngOnDetach(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
  }
  check_dismissable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.dismissable = currValue;
      this._expr_0 = currValue;
    }
  }
  check_showCloseIcon(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.showCloseIcon = currValue;
      this._expr_1 = currValue;
    }
  }
  check_style(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.style = currValue;
      this._expr_2 = currValue;
    }
  }
  check_styleClass(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.styleClass = currValue;
      this._expr_3 = currValue;
    }
  }
  check_appendTo(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.appendTo = currValue;
      this._expr_4 = currValue;
    }
  }
  ngDoCheck(view:import7.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import7.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onBeforeShow.subscribe(_eventHandler.bind(view,'onBeforeShow'))); }
    if (emit1) { (this.subscription1 = this.context.onAfterShow.subscribe(_eventHandler.bind(view,'onAfterShow'))); }
    if (emit2) { (this.subscription2 = this.context.onBeforeHide.subscribe(_eventHandler.bind(view,'onBeforeHide'))); }
    if (emit3) { (this.subscription3 = this.context.onAfterHide.subscribe(_eventHandler.bind(view,'onAfterHide'))); }
  }
}
var renderType_OverlayPanel_Host:import9.RenderComponentType = import8.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{});
class View_OverlayPanel_Host0 extends import7.AppView<any> {
  _el_0:any;
  compView_0:import7.AppView<import1.OverlayPanel>;
  _DomHandler_0_3:import11.DomHandler;
  _OverlayPanel_0_4:Wrapper_OverlayPanel;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_OverlayPanel_Host0,renderType_OverlayPanel_Host,import12.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import8.selectOrCreateRenderHostElement(this.renderer,'p-overlayPanel',import8.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_OverlayPanel0(this.viewUtils,this,0,this._el_0);
    this._DomHandler_0_3 = new import11.DomHandler();
    this._OverlayPanel_0_4 = new Wrapper_OverlayPanel(new import15.ElementRef(this._el_0),this._DomHandler_0_3,this.renderer);
    this.compView_0.create(this._OverlayPanel_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._OverlayPanel_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_3; }
    if (((token === import1.OverlayPanel) && (0 === requestNodeIndex))) { return this._OverlayPanel_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._OverlayPanel_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._OverlayPanel_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._OverlayPanel_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const OverlayPanelNgFactory:import14.ComponentFactory<import1.OverlayPanel> = new import14.ComponentFactory<import1.OverlayPanel>('p-overlayPanel',View_OverlayPanel_Host0,import1.OverlayPanel);
const styles_OverlayPanel:any[] = ([] as any[]);
class View_OverlayPanel1 extends import7.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import16.Wrapper_NgClass;
  _el_1:any;
  _map_3:any;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import17.ViewContainer) {
    super(View_OverlayPanel1,renderType_OverlayPanel,import12.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._map_3 = import8.pureProxy1((p0:any):{[key: string]:any} => {
      return {'ui-state-hover': p0};
    });
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import8.createRenderElement(this.renderer,(null as any),'a',new import8.InlineArray4(4,'class','ui-overlaypanel-close ui-state-default','href','#'),(null as any));
    this._NgClass_0_3 = new import16.Wrapper_NgClass(this.parentView.parentView.injectorGet(import18.IterableDiffers,this.parentView.parentIndex),this.parentView.parentView.injectorGet(import19.KeyValueDiffers,this.parentView.parentIndex),new import15.ElementRef(this._el_0),this.renderer);
    this._el_1 = import8.createRenderElement(this.renderer,this._el_0,'span',new import8.InlineArray2(2,'class','fa fa-fw fa-close'),(null as any));
    var disposable_0:Function = import8.subscribeToRenderElement(this,this._el_0,new import8.InlineArray8(6,'mouseenter',(null as any),'mouseleave',(null as any),'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = 'ui-overlaypanel-close ui-state-default';
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this._map_3(this.parentView.context.hoverCloseIcon);
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'mouseenter')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.hoverCloseIcon = true)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'mouseleave')) {
      const pd_sub_1:any = ((<any>(this.parentView.context.hoverCloseIcon = false)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'click')) {
      const pd_sub_2:any = ((<any>this.parentView.context.onCloseClick($event)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}
var renderType_OverlayPanel:import9.RenderComponentType = import8.createRenderComponentType('',1,import10.ViewEncapsulation.None,styles_OverlayPanel,{});
export class View_OverlayPanel0 extends import7.AppView<import1.OverlayPanel> {
  _text_0:any;
  _el_1:any;
  _NgClass_1_3:import16.Wrapper_NgClass;
  _NgStyle_1_4:import21.Wrapper_NgStyle;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  _anchor_7:any;
  /*private*/ _vc_7:import17.ViewContainer;
  _TemplateRef_7_5:any;
  _NgIf_7_6:import22.Wrapper_NgIf;
  _text_8:any;
  _text_9:any;
  /*private*/ _expr_15:any;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_OverlayPanel0,renderType_OverlayPanel,import12.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import13.ChangeDetectorStatus.CheckAlways);
    this._expr_15 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import8.createRenderElement(this.renderer,parentRenderNode,'div',import8.EMPTY_INLINE_ARRAY,(null as any));
    this._NgClass_1_3 = new import16.Wrapper_NgClass(this.parentView.injectorGet(import18.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import19.KeyValueDiffers,this.parentIndex),new import15.ElementRef(this._el_1),this.renderer);
    this._NgStyle_1_4 = new import21.Wrapper_NgStyle(this.parentView.injectorGet(import19.KeyValueDiffers,this.parentIndex),new import15.ElementRef(this._el_1),this.renderer);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import8.createRenderElement(this.renderer,this._el_1,'div',new import8.InlineArray2(2,'class','ui-overlaypanel-content'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this.projectNodes(this._el_3,0);
    this._text_5 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._text_6 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._anchor_7 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_7 = new import17.ViewContainer(7,1,this,this._anchor_7);
    this._TemplateRef_7_5 = new import23.TemplateRef_(this,7,this._anchor_7);
    this._NgIf_7_6 = new import22.Wrapper_NgIf(this._vc_7.vcRef,this._TemplateRef_7_5);
    this._text_8 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_9 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import8.subscribeToRenderElement(this,this._el_1,new import8.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_1));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6,
      this._anchor_7,
      this._text_8,
      this._text_9
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import23.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_5; }
    if (((token === import24.NgIf) && (7 === requestNodeIndex))) { return this._NgIf_7_6.context; }
    if (((token === import20.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgClass_1_3.context; }
    if (((token === import25.NgStyle) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgStyle_1_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.styleClass;
    this._NgClass_1_3.check_klass(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = 'ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow';
    this._NgClass_1_3.check_ngClass(currVal_1_0_1,throwOnChange,false);
    this._NgClass_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_1_1_0:any = this.context.style;
    this._NgStyle_1_4.check_ngStyle(currVal_1_1_0,throwOnChange,false);
    this._NgStyle_1_4.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_7_0_0:any = this.context.showCloseIcon;
    this._NgIf_7_6.check_ngIf(currVal_7_0_0,throwOnChange,false);
    this._NgIf_7_6.ngDoCheck(this,this._anchor_7,throwOnChange);
    this._vc_7.detectChangesInNestedViews(throwOnChange);
    const currVal_15:any = (this.context.visible? 'block': 'none');
    if (import8.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementStyle(this._el_1,'display',((this.viewUtils.sanitizer.sanitize(import26.SecurityContext.STYLE,currVal_15) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import26.SecurityContext.STYLE,currVal_15).toString()));
      this._expr_15 = currVal_15;
    }
  }
  destroyInternal():void {
    this._vc_7.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import7.AppView<any> {
    if ((nodeIndex == 7)) { return new View_OverlayPanel1(this.viewUtils,this,7,this._anchor_7,this._vc_7); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onPanelClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}