/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'primeng/components/spinner/spinner';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from 'primeng/components/inputtext/inputtext';
import * as import4 from '@angular/common/src/localization';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/core/src/change_detection/change_detection_util';
import * as import8 from '@angular/core/src/linker/view';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/render/api';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from 'primeng/components/dom/domhandler';
import * as import13 from '@angular/core/src/linker/view_type';
import * as import14 from '@angular/core/src/change_detection/constants';
import * as import15 from '@angular/core/src/linker/component_factory';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/forms/src/directives/control_value_accessor';
import * as import18 from '../inputtext/inputtext.ngfactory';
import * as import19 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import20 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import21 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import22 from '@angular/common/src/directives/ng_class';
class SpinnerModuleInjector extends import0.NgModuleInjector<import1.SpinnerModule> {
  _CommonModule_0:import2.CommonModule;
  _InputTextModule_1:import3.InputTextModule;
  _SpinnerModule_2:import1.SpinnerModule;
  __NgLocalization_3:import4.NgLocaleLocalization;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_3():import4.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == null)) { (this.__NgLocalization_3 = new import4.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_3;
  }
  createInternal():import1.SpinnerModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._InputTextModule_1 = new import3.InputTextModule();
    this._SpinnerModule_2 = new import1.SpinnerModule();
    return this._SpinnerModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.InputTextModule)) { return this._InputTextModule_1; }
    if ((token === import1.SpinnerModule)) { return this._SpinnerModule_2; }
    if ((token === import4.NgLocalization)) { return this._NgLocalization_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const SpinnerModuleNgFactory:import0.NgModuleFactory<import1.SpinnerModule> = new import0.NgModuleFactory(SpinnerModuleInjector,import1.SpinnerModule);
export class Wrapper_Spinner {
  /*private*/ _eventHandler:Function;
  context:import1.Spinner;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import1.Spinner(p0,p1);
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_10 = import7.UNINITIALIZED;
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_step(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.step = currValue;
      this._expr_0 = currValue;
    }
  }
  check_min(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.min = currValue;
      this._expr_1 = currValue;
    }
  }
  check_max(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.max = currValue;
      this._expr_2 = currValue;
    }
  }
  check_maxlength(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.maxlength = currValue;
      this._expr_3 = currValue;
    }
  }
  check_size(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.size = currValue;
      this._expr_4 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_5 = currValue;
    }
  }
  check_readonly(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.readonly = currValue;
      this._expr_6 = currValue;
    }
  }
  check_decimalSeparator(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.decimalSeparator = currValue;
      this._expr_7 = currValue;
    }
  }
  check_thousandSeparator(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.thousandSeparator = currValue;
      this._expr_8 = currValue;
    }
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_9:any = this.context.filled;
    if (import9.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementClass(el,'ui-inputwrapper-filled',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context.focus;
    if (import9.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementClass(el,'ui-inputwrapper-focus',currVal_10);
      this._expr_10 = currVal_10;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onChange.subscribe(_eventHandler.bind(view,'onChange'))); }
  }
}
var renderType_Spinner_Host:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_Spinner_Host0 extends import8.AppView<any> {
  _el_0:any;
  compView_0:import8.AppView<import1.Spinner>;
  _DomHandler_0_3:import12.DomHandler;
  _Spinner_0_4:Wrapper_Spinner;
  __NG_VALUE_ACCESSOR_0_5:any[];
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Spinner_Host0,renderType_Spinner_Host,import13.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways);
  }
  get _NG_VALUE_ACCESSOR_0_5():any[] {
    if ((this.__NG_VALUE_ACCESSOR_0_5 == null)) { (this.__NG_VALUE_ACCESSOR_0_5 = [this._Spinner_0_4.context]); }
    return this.__NG_VALUE_ACCESSOR_0_5;
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer,'p-spinner',import9.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_Spinner0(this.viewUtils,this,0,this._el_0);
    this._DomHandler_0_3 = new import12.DomHandler();
    this._Spinner_0_4 = new Wrapper_Spinner(new import16.ElementRef(this._el_0),this._DomHandler_0_3);
    this.compView_0.create(this._Spinner_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import15.ComponentRef_<any>(0,this,this._el_0,this._Spinner_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.DomHandler) && (0 === requestNodeIndex))) { return this._DomHandler_0_3; }
    if (((token === import1.Spinner) && (0 === requestNodeIndex))) { return this._Spinner_0_4.context; }
    if (((token === import17.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Spinner_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this._Spinner_0_4.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._Spinner_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const SpinnerNgFactory:import15.ComponentFactory<import1.Spinner> = new import15.ComponentFactory<import1.Spinner>('p-spinner',View_Spinner_Host0,import1.Spinner);
const styles_Spinner:any[] = ([] as any[]);
var renderType_Spinner:import10.RenderComponentType = import9.createRenderComponentType('',0,import11.ViewEncapsulation.None,styles_Spinner,{});
export class View_Spinner0 extends import8.AppView<import1.Spinner> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _InputText_3_3:import18.Wrapper_InputText;
  _text_4:any;
  _el_5:any;
  _NgClass_5_3:import19.Wrapper_NgClass;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _NgClass_10_3:import19.Wrapper_NgClass;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  _map_24:any;
  _map_25:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Spinner0,renderType_Spinner,import13.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import14.ChangeDetectorStatus.CheckAlways);
    this._expr_19 = import7.UNINITIALIZED;
    this._expr_20 = import7.UNINITIALIZED;
    this._expr_21 = import7.UNINITIALIZED;
    this._expr_22 = import7.UNINITIALIZED;
    this._expr_23 = import7.UNINITIALIZED;
    this._map_24 = import9.pureProxy3((p0:any,p1:any,p2:any):{[key: string]:any} => {
      return {
        'ui-state-hover': p0,
        'ui-state-active': p1,
        'ui-state-disabled': p2
      }
      ;
    });
    this._map_25 = import9.pureProxy3((p0:any,p1:any,p2:any):{[key: string]:any} => {
      return {
        'ui-state-hover': p0,
        'ui-state-active': p1,
        'ui-state-disabled': p2
      }
      ;
    });
  }
  createInternal(rootSelector:string):import15.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import9.createRenderElement(this.renderer,parentRenderNode,'span',new import9.InlineArray2(2,'class','ui-spinner ui-widget ui-corner-all'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import9.createRenderElement(this.renderer,this._el_1,'input',new import9.InlineArray8(6,'class','ui-spinner-input','pInputText','','type','text'),(null as any));
    this._InputText_3_3 = new import18.Wrapper_InputText(new import16.ElementRef(this._el_3));
    this._text_4 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_5 = import9.createRenderElement(this.renderer,this._el_1,'a',new import9.InlineArray2(2,'class','ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default ui-button-text-only'),(null as any));
    this._NgClass_5_3 = new import19.Wrapper_NgClass(this.parentView.injectorGet(import20.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import21.KeyValueDiffers,this.parentIndex),new import16.ElementRef(this._el_5),this.renderer);
    this._text_6 = this.renderer.createText(this._el_5,'\n                ',(null as any));
    this._el_7 = import9.createRenderElement(this.renderer,this._el_5,'span',new import9.InlineArray2(2,'class','fa fa-caret-up'),(null as any));
    this._text_8 = this.renderer.createText(this._el_5,'\n            ',(null as any));
    this._text_9 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_10 = import9.createRenderElement(this.renderer,this._el_1,'a',new import9.InlineArray2(2,'class','ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default ui-button-text-only'),(null as any));
    this._NgClass_10_3 = new import19.Wrapper_NgClass(this.parentView.injectorGet(import20.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import21.KeyValueDiffers,this.parentIndex),new import16.ElementRef(this._el_10),this.renderer);
    this._text_11 = this.renderer.createText(this._el_10,'\n                ',(null as any));
    this._el_12 = import9.createRenderElement(this.renderer,this._el_10,'span',new import9.InlineArray2(2,'class','fa fa-caret-down'),(null as any));
    this._text_13 = this.renderer.createText(this._el_10,'\n            ',(null as any));
    this._text_14 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_15 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_3,new import9.InlineArray16(16,'keydown',(null as any),'keyup',(null as any),'keypress',(null as any),'blur',(null as any),'change',(null as any),'focus',(null as any),'mouseover',(null as any),'mouseout',(null as any)),this.eventHandler(this.handleEvent_3));
    var disposable_1:Function = import9.subscribeToRenderElement(this,this._el_5,new import9.InlineArray8(8,'mouseenter',(null as any),'mouseleave',(null as any),'mousedown',(null as any),'mouseup',(null as any)),this.eventHandler(this.handleEvent_5));
    var disposable_2:Function = import9.subscribeToRenderElement(this,this._el_10,new import9.InlineArray8(8,'mouseenter',(null as any),'mouseleave',(null as any),'mousedown',(null as any),'mouseup',(null as any)),this.eventHandler(this.handleEvent_10));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.InputText) && (3 === requestNodeIndex))) { return this._InputText_3_3.context; }
    if (((token === import22.NgClass) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgClass_5_3.context; }
    if (((token === import22.NgClass) && ((10 <= requestNodeIndex) && (requestNodeIndex <= 13)))) { return this._NgClass_10_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InputText_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    const currVal_5_0_0:any = 'ui-spinner-button ui-spinner-up ui-corner-tr ui-button ui-widget ui-state-default ui-button-text-only';
    this._NgClass_5_3.check_klass(currVal_5_0_0,throwOnChange,false);
    const currVal_5_0_1:any = this._map_24(this.context.hoverUp,this.context.activeUp,this.context.disabled);
    this._NgClass_5_3.check_ngClass(currVal_5_0_1,throwOnChange,false);
    this._NgClass_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_10_0_0:any = 'ui-spinner-button ui-spinner-down ui-corner-br ui-button ui-widget ui-state-default ui-button-text-only';
    this._NgClass_10_3.check_klass(currVal_10_0_0,throwOnChange,false);
    const currVal_10_0_1:any = this._map_25(this.context.hoverDown,this.context.activeDown,this.context.disabled);
    this._NgClass_10_3.check_ngClass(currVal_10_0_1,throwOnChange,false);
    this._NgClass_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_19:any = this.context.valueAsString;
    if (import9.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementProperty(this._el_3,'value',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.context.size;
    if (import9.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementAttribute(this._el_3,'size',((currVal_20 == null)? (null as any): currVal_20.toString()));
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = this.context.maxlength;
    if (import9.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementAttribute(this._el_3,'maxlength',((currVal_21 == null)? (null as any): currVal_21.toString()));
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = this.context.disabled;
    if (import9.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementProperty(this._el_3,'disabled',currVal_22);
      this._expr_22 = currVal_22;
    }
    const currVal_23:any = this.context.readonly;
    if (import9.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementProperty(this._el_3,'readOnly',currVal_23);
      this._expr_23 = currVal_23;
    }
    this._InputText_3_3.checkHost(this,this,this._el_3,throwOnChange);
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._InputText_3_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'keydown')) {
      const pd_sub_0:any = ((<any>this.context.onInputKeydown($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'keyup')) {
      const pd_sub_1:any = ((<any>this.context.onInput($event,this._el_3.value)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'keypress')) {
      const pd_sub_2:any = ((<any>this.context.onInputKeyPress($event)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_3:any = ((<any>this.context.onBlur()) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'change')) {
      const pd_sub_4:any = ((<any>this.context.handleChange($event)) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'focus')) {
      const pd_sub_5:any = ((<any>this.context.onFocus()) !== false);
      result = (pd_sub_5 && result);
    }
    return result;
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'mouseenter')) {
      const pd_sub_0:any = ((<any>this.context.onUpButtonMouseenter($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'mouseleave')) {
      const pd_sub_1:any = ((<any>this.context.onUpButtonMouseleave($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'mousedown')) {
      const pd_sub_2:any = ((<any>this.context.onUpButtonMousedown($event,this._el_3)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'mouseup')) {
      const pd_sub_3:any = ((<any>this.context.onUpButtonMouseup($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'mouseenter')) {
      const pd_sub_0:any = ((<any>this.context.onDownButtonMouseenter($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'mouseleave')) {
      const pd_sub_1:any = ((<any>this.context.onDownButtonMouseleave($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'mousedown')) {
      const pd_sub_2:any = ((<any>this.context.onDownButtonMousedown($event,this._el_3)) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'mouseup')) {
      const pd_sub_3:any = ((<any>this.context.onDownButtonMouseup($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
}