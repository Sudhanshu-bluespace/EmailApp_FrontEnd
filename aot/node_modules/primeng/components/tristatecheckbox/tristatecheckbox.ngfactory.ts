/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from 'primeng/components/tristatecheckbox/tristatecheckbox';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/change_detection/change_detection_util';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/view_utils';
import * as import9 from '@angular/core/src/render/api';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/view_type';
import * as import12 from '@angular/core/src/change_detection/constants';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from '@angular/forms/src/directives/control_value_accessor';
import * as import15 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import16 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import17 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '@angular/common/src/directives/ng_class';
class TriStateCheckboxModuleInjector extends import0.NgModuleInjector<import1.TriStateCheckboxModule> {
  _CommonModule_0:import2.CommonModule;
  _TriStateCheckboxModule_1:import1.TriStateCheckboxModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.TriStateCheckboxModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._TriStateCheckboxModule_1 = new import1.TriStateCheckboxModule();
    return this._TriStateCheckboxModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.TriStateCheckboxModule)) { return this._TriStateCheckboxModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const TriStateCheckboxModuleNgFactory:import0.NgModuleFactory<import1.TriStateCheckboxModule> = new import0.NgModuleFactory(TriStateCheckboxModuleInjector,import1.TriStateCheckboxModule);
export class Wrapper_TriStateCheckbox {
  /*private*/ _eventHandler:Function;
  context:import1.TriStateCheckbox;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import1.TriStateCheckbox();
    this._expr_0 = import6.UNINITIALIZED;
    this._expr_1 = import6.UNINITIALIZED;
  }
  ngOnDetach(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_0 = currValue;
    }
  }
  check_name(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.name = currValue;
      this._expr_1 = currValue;
    }
  }
  ngDoCheck(view:import7.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import7.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onChange.subscribe(_eventHandler.bind(view,'onChange'))); }
  }
}
var renderType_TriStateCheckbox_Host:import9.RenderComponentType = import8.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{});
class View_TriStateCheckbox_Host0 extends import7.AppView<any> {
  _el_0:any;
  compView_0:import7.AppView<import1.TriStateCheckbox>;
  _TriStateCheckbox_0_3:Wrapper_TriStateCheckbox;
  __NG_VALUE_ACCESSOR_0_4:any[];
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TriStateCheckbox_Host0,renderType_TriStateCheckbox_Host,import11.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import12.ChangeDetectorStatus.CheckAlways);
  }
  get _NG_VALUE_ACCESSOR_0_4():any[] {
    if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) { (this.__NG_VALUE_ACCESSOR_0_4 = [this._TriStateCheckbox_0_3.context]); }
    return this.__NG_VALUE_ACCESSOR_0_4;
  }
  createInternal(rootSelector:string):import13.ComponentRef<any> {
    this._el_0 = import8.selectOrCreateRenderHostElement(this.renderer,'p-triStateCheckbox',import8.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TriStateCheckbox0(this.viewUtils,this,0,this._el_0);
    this._TriStateCheckbox_0_3 = new Wrapper_TriStateCheckbox();
    this.compView_0.create(this._TriStateCheckbox_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import13.ComponentRef_<any>(0,this,this._el_0,this._TriStateCheckbox_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.TriStateCheckbox) && (0 === requestNodeIndex))) { return this._TriStateCheckbox_0_3.context; }
    if (((token === import14.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TriStateCheckbox_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._TriStateCheckbox_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TriStateCheckboxNgFactory:import13.ComponentFactory<import1.TriStateCheckbox> = new import13.ComponentFactory<import1.TriStateCheckbox>('p-triStateCheckbox',View_TriStateCheckbox_Host0,import1.TriStateCheckbox);
const styles_TriStateCheckbox:any[] = ([] as any[]);
var renderType_TriStateCheckbox:import9.RenderComponentType = import8.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_TriStateCheckbox,{});
export class View_TriStateCheckbox0 extends import7.AppView<import1.TriStateCheckbox> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _NgClass_8_3:import15.Wrapper_NgClass;
  _text_9:any;
  _el_10:any;
  _NgClass_10_3:import15.Wrapper_NgClass;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  _map_18:any;
  _map_19:any;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TriStateCheckbox0,renderType_TriStateCheckbox,import11.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import12.ChangeDetectorStatus.CheckAlways);
    this._expr_16 = import6.UNINITIALIZED;
    this._expr_17 = import6.UNINITIALIZED;
    this._map_18 = import8.pureProxy4((p0:any,p1:any,p2:any,p3:any):{[key: string]:any} => {
      return {
        'ui-state-hover': p0,
        'ui-state-active': p1,
        'ui-state-disabled': p2,
        'ui-state-focus': p3
      }
      ;
    });
    this._map_19 = import8.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        'fa-check': p0,
        'fa-close': p1
      }
      ;
    });
  }
  createInternal(rootSelector:string):import13.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','ui-chkbox ui-tristatechkbox ui-widget'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import8.createRenderElement(this.renderer,this._el_1,'div',new import8.InlineArray2(2,'class','ui-helper-hidden-accessible'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this._el_5 = import8.createRenderElement(this.renderer,this._el_3,'input',new import8.InlineArray4(4,'readonly','','type','text'),(null as any));
    this._text_6 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._text_7 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_8 = import8.createRenderElement(this.renderer,this._el_1,'div',new import8.InlineArray2(2,'class','ui-chkbox-box ui-widget ui-corner-all ui-state-default'),(null as any));
    this._NgClass_8_3 = new import15.Wrapper_NgClass(this.parentView.injectorGet(import16.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import17.KeyValueDiffers,this.parentIndex),new import18.ElementRef(this._el_8),this.renderer);
    this._text_9 = this.renderer.createText(this._el_8,'\n                ',(null as any));
    this._el_10 = import8.createRenderElement(this.renderer,this._el_8,'span',new import8.InlineArray2(2,'class','ui-chkbox-icon fa ui-c'),(null as any));
    this._NgClass_10_3 = new import15.Wrapper_NgClass(this.parentView.injectorGet(import16.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import17.KeyValueDiffers,this.parentIndex),new import18.ElementRef(this._el_10),this.renderer);
    this._text_11 = this.renderer.createText(this._el_8,'\n            ',(null as any));
    this._text_12 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_13 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import8.subscribeToRenderElement(this,this._el_5,new import8.InlineArray8(8,'keyup',(null as any),'keydown',(null as any),'focus',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_5));
    var disposable_1:Function = import8.subscribeToRenderElement(this,this._el_8,new import8.InlineArray8(6,'click',(null as any),'mouseenter',(null as any),'mouseleave',(null as any)),this.eventHandler(this.handleEvent_8));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.NgClass) && (10 === requestNodeIndex))) { return this._NgClass_10_3.context; }
    if (((token === import19.NgClass) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._NgClass_8_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_8_0_0:any = 'ui-chkbox-box ui-widget ui-corner-all ui-state-default';
    this._NgClass_8_3.check_klass(currVal_8_0_0,throwOnChange,false);
    const currVal_8_0_1:any = this._map_18((this.context.hover && !this.context.disabled),(this.context.value != (null as any)),this.context.disabled,this.context.focus);
    this._NgClass_8_3.check_ngClass(currVal_8_0_1,throwOnChange,false);
    this._NgClass_8_3.ngDoCheck(this,this._el_8,throwOnChange);
    const currVal_10_0_0:any = 'ui-chkbox-icon fa ui-c';
    this._NgClass_10_3.check_klass(currVal_10_0_0,throwOnChange,false);
    const currVal_10_0_1:any = this._map_19((this.context.value == true),(this.context.value == false));
    this._NgClass_10_3.check_ngClass(currVal_10_0_1,throwOnChange,false);
    this._NgClass_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_16:any = this.context.name;
    if (import8.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementProperty(this._el_5,'name',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this.context.disabled;
    if (import8.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementProperty(this._el_5,'disabled',currVal_17);
      this._expr_17 = currVal_17;
    }
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'keyup')) {
      const pd_sub_0:any = ((<any>this.context.onKeyup($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'keydown')) {
      const pd_sub_1:any = ((<any>this.context.onKeydown($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'focus')) {
      const pd_sub_2:any = ((<any>this.context.onFocus()) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_3:any = ((<any>this.context.onBlur()) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onClick($event,this._el_5)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'mouseenter')) {
      const pd_sub_1:any = ((<any>(this.context.hover = true)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'mouseleave')) {
      const pd_sub_2:any = ((<any>(this.context.hover = false)) !== false);
      result = (pd_sub_2 && result);
    }
    return result;
  }
}